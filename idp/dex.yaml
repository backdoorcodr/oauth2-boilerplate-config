---
# Source: kubernetes/charts/dex/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app.kubernetes.io/name: dex
    helm.sh/chart: dex-2.11.0
    app.kubernetes.io/instance: oauth2-proxy-example
    app.kubernetes.io/version: "2.23.0"
    app.kubernetes.io/managed-by: Helm
  name: oauth2-proxy-example-dex
---
# Source: kubernetes/charts/dex/templates/secret.yaml
apiVersion: v1
kind: Secret
metadata:
  labels:
    app.kubernetes.io/name: dex
    helm.sh/chart: dex-2.11.0
    app.kubernetes.io/instance: oauth2-proxy-example
    app.kubernetes.io/version: "2.23.0"
    app.kubernetes.io/managed-by: Helm
  name: oauth2-proxy-example-dex
stringData:
  config.yaml: |-
    issuer: http://demo.msarimz.eu/dex
    storage:
      config:
        inCluster: true
      type: kubernetes
    logger:
      level: debug
    web:
      http: 0.0.0.0:5556
    oauth2: 
      alwaysShowLoginScreen: false
      skipApprovalScreen: true
    staticClients:
    - id: oauth2-proxy
      name: OAuth2 Proxy
      redirectURIs:
      - http://demo.msarimz.eu/oauth2/callback
      secret: b2F1dGgyLXByb3h5LWNsaWVudC1zZWNyZXQK
    enablePasswordDB: true
    staticPasswords:
    - email: admin@example.com
      hash: $2a$10$2b2cU8CPhOTaGrs1HRQuAueS7JTT5ZHsHSzYiFPm1leZck7Mc8T4W
      userID: 08a8684b-db88-4b73-90a9-3cd1661f5466
      username: admin
    expiry:
      idTokens: 1h
      signingKeys: 4h
---
# Source: kubernetes/charts/dex/templates/clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/name: dex
    helm.sh/chart: dex-2.11.0
    app.kubernetes.io/instance: oauth2-proxy-example
    app.kubernetes.io/version: "2.23.0"
    app.kubernetes.io/managed-by: Helm
  name: oauth2-proxy-example-dex
rules:
- apiGroups: ["dex.coreos.com"] # API group created by dex
  resources: ["*"]
  verbs: ["*"]
- apiGroups: ["apiextensions.k8s.io"]
  resources: ["customresourcedefinitions"]
  verbs: ["create"] # To manage its own resources, dex must be able to create customresourcedefinitions
---
# Source: kubernetes/charts/dex/templates/clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app.kubernetes.io/name: dex
    helm.sh/chart: dex-2.11.0
    app.kubernetes.io/instance: oauth2-proxy-example
    app.kubernetes.io/version: "2.23.0"
    app.kubernetes.io/managed-by: Helm
  name: oauth2-proxy-example-dex
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: oauth2-proxy-example-dex
subjects:
  - kind: ServiceAccount
    name: oauth2-proxy-example-dex
    namespace: default
---
# Source: kubernetes/charts/dex/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: oauth2-proxy-example-dex
  labels:
    app.kubernetes.io/name: dex
    helm.sh/chart: dex-2.11.0
    app.kubernetes.io/instance: oauth2-proxy-example
    app.kubernetes.io/version: "2.23.0"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  sessionAffinity: None
  ports:
  - name: http
    targetPort: http
    port: 32000
  selector:
    app.kubernetes.io/name: dex
    app.kubernetes.io/instance: oauth2-proxy-example
---
# Source: kubernetes/charts/dex/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: oauth2-proxy-example-dex
  labels:
    app.kubernetes.io/name: dex
    helm.sh/chart: dex-2.11.0
    app.kubernetes.io/instance: oauth2-proxy-example
    app.kubernetes.io/version: "2.23.0"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: dex
spec:
  replicas: 1
  strategy:
    rollingUpdate:
      maxSurge: 0
      maxUnavailable: 1
    type: RollingUpdate
  selector:
    matchLabels:
      app.kubernetes.io/name: dex
      app.kubernetes.io/instance: oauth2-proxy-example
      app.kubernetes.io/component: dex
  template:
    metadata:
      labels:
        app.kubernetes.io/name: dex
        app.kubernetes.io/instance: oauth2-proxy-example
        app.kubernetes.io/component: dex
      annotations:
        checksum/config: 185f32cfabdf4f7467868dc301d4bd33e68951e12eddeb69f23ebc1d0f91ba28
    spec:
      serviceAccountName: oauth2-proxy-example-dex
      nodeSelector:
          {}
      containers:
      - name: main
        image: "ghcr.io/dexidp/dex:v2.30.0"
        imagePullPolicy: IfNotPresent
        command:
        - /usr/local/bin/dex
        - serve
        - /etc/dex/cfg/config.yaml
        resources:
          null
        ports:
        - name: http
          containerPort: 5556
          protocol: TCP
        env:
          - name: KUBERNETES_POD_NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
        volumeMounts:
        - mountPath: /etc/dex/cfg
          name: config
      volumes:
      - secret:
          defaultMode: 420
          items:
          - key: config.yaml
            path: config.yaml
          secretName: oauth2-proxy-example-dex
        name: config
---
# Source: kubernetes/charts/dex/templates/ingress.yaml
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: dex-ingress
  annotations:
    cert-manager.io/cluster-issuer: letsencrypt-issuer
spec:
  ingressClassName: nginx
  tls:
    - hosts:
      - demo.msarimz.eu
      secretName: demo.msarimz.eu
  rules:
  - host: demo.msarimz.eu
    http:
      paths:
      - backend:
          service:
            name: oauth2-proxy-example-dex
            port:
              number: 32000
        path: /dex
        pathType: ImplementationSpecific
---